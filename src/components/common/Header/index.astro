---
import { useTranslations } from "@i18n/util";
import Navbar from "@components/common/Navbar.astro";
import { LanguageToggle } from "@serverless-cd/goat-ui";
import MobileNavbar from "@components/common/MobileNavbar.astro";
import SearchComp from "./searchComp/index.astro";
import { SITE } from "@utils/config";
import Alert from "./Alert.astro";

interface Props {
  align?: "home" | "docs";
  position?: "static" | "sticky";
  lang: "zh-cn" | "en" | string;
}

const t = useTranslations(Astro);
const { align = "home", position = "sticky", lang } = Astro.props;

let height,
  width,
  xpadding = "";
(() => {
  switch (align) {
    case "home":
      height = "4rem";
      width = "85.125rem";
      xpadding = "0";
      return;
    case "docs":
      height = "3.5rem";
      width = "100%";
      xpadding = "1.5rem";
      return;
  }
})();
---

<span class="header-wrapper">
  <Alert />
  <my-layout
    style={`position: ${position}; height: ${height}`}
    class="w-full backdrop-blur-md top-0 z-[10] bg-base-100 flex justify-center"
  >
    <!-- 方便控制header宽度 -->
    <div class="header-content flex items-center justify-between">
      <div
        class="left-content h-full flex flex-1 items-center after:content-[''] after:grow after:invisible"
      >
        <a class="no-underline" href="/">
          <img class="logo" src={SITE.logoUrl} alt=`${SITE.name}-logo` />
        </a>
        <MobileNavbar top={height} class="mobile-navbar h-full ml-4" />
      </div>

      <div class="center-content justify-center flex-2 h-full">
        <Navbar top={height} class="pc-navbar h-full" />
      </div>

      <div
        class="right-content flex flex-1 items-center md:gap-4 before:content-[''] before:grow before:invisible"
      >
        <LanguageToggle
          id="pc-toggle"
          lang={lang.toLowerCase()}
          theme="error"
        />
        <div>
          <div class="search-container bg-error rounded-[32px] pl-3">
            <svg
              class="icon search-svg"
              viewBox="0 0 1024 1024"
              version="1.1"
              xmlns="http://www.w3.org/2000/svg"
              p-id="2373"
              width="16"
              height="16"
            >
              <path
                d="M966.4 924.8l-230.4-227.2c60.8-67.2 96-156.8 96-256 0-217.6-176-390.4-390.4-390.4-217.6 0-390.4 176-390.4 390.4 0 217.6 176 390.4 390.4 390.4 99.2 0 188.8-35.2 256-96l230.4 227.2c9.6 9.6 28.8 9.6 38.4 0C979.2 950.4 979.2 934.4 966.4 924.8zM102.4 441.6c0-185.6 150.4-339.2 339.2-339.2s339.2 150.4 339.2 339.2c0 89.6-35.2 172.8-92.8 233.6-3.2 0-3.2 3.2-6.4 3.2-3.2 3.2-3.2 3.2-3.2 6.4-60.8 57.6-144 92.8-233.6 92.8C256 780.8 102.4 627.2 102.4 441.6z"
                p-id="2374"></path>
            </svg>
            <input
              id="search"
              type="text"
              placeholder="Search"
              class="bg-error"
              autocomplete="off"
            />
            <!-- 清除按钮 -->
            <button id="clearSearch" class="clear-button">×</button>
          </div>
          <div id="results"></div>
        </div>
      </div>
    </div>
  </my-layout>
</span>

<script is:inline>
  document.querySelector("#search")?.addEventListener("input", async (e) => {
    const searchInput = e.target;
    const clearButton = document.querySelector("#clearSearch");

    // 是否显示清除按钮
    if (searchInput.value.length > 0) {
      clearButton.classList.add("visible");
    } else {
      clearButton.classList.remove("visible");
    }

    if (searchInput.dataset.loaded !== "true") {
      searchInput.dataset.loaded = "true";
      window.pagefind = await import(
        "https://sca.aliyun.com/pagefind/pagefind.js"
      );
    }
    const search = await window.pagefind.search(searchInput.value);
    document.querySelector("#results").innerHTML = "";
    for (const result of search.results) {
      const data = await result.data();
      document.querySelector("#results").innerHTML += `
        <a href="${data.url}">
          <h3 class='bg-neutral pl-3 text-link'>${data.meta.title}</h3>
          <p class='px-3 py-4'>${data.excerpt}</p>
        </a>`;
    }
  });

  // 监听清除按钮点击事件
  document.querySelector("#clearSearch").addEventListener("click", () => {
    const searchInput = document.querySelector("#search");
    const clearButton = document.querySelector("#clearSearch");
    const resultsContainer = document.querySelector("#results");

    searchInput.value = "";
    clearButton.classList.remove("visible");

    // 清空#results元素内容
    resultsContainer.innerHTML = "";
  });
</script>

<script>
  // animation
  let script = document.createElement("script");
  script.src =
    "https://g.alicdn.com/cm-design/mw-vendor/1.6.12/web-animations-next.min.js?spm=defwork.home.0.0.413a5c4bEOqptl&file=web-animations-next.min.js";
  script.onload = function () {
    if (!document.getAnimations) {
      document.getAnimations = window.Element.prototype.getAnimations;
    }
  };
  document.head.appendChild(script);
</script>

<script>
  class HeaderLayout2 extends HTMLElement {
    private ifscroll: boolean;
    constructor() {
      super();
      this.ifscroll = false;
      window.addEventListener("scroll", this.handleScroll);
    }

    handleScroll = () => {
      if (window.innerWidth <= 800) return;
      if (window.scrollY >= 100 && !this.ifscroll) {
        this.ifscroll = true;
        this.classList.add("bg-secondary/[0.84]");
      }
      if (window.scrollY <= 100 && this.ifscroll) {
        this.ifscroll = false;
        this.classList.remove("bg-secondary/[0.84]");
      }
    };
  }
  customElements.define("my-layout", HeaderLayout2);
</script>

<style define:vars={{ width, height, xpadding }} is:global>
  .header-wrapper {
    my-layout {
      --header-content-width: var(--width);
      --logo-height: 1.125rem;
      --header-height: var(--height);
      --header-xl-padding: var(--xpadding);
    }

    .header-content {
      width: var(--header-content-width);
      padding-left: var(--header-xl-padding);
      padding-right: var(--header-xl-padding);
    }

    .left-content .logo {
      vertical-align: sub;
      height: var(--logo-height);
    }

    .left-content .mobile-navbar {
      display: none;
    }
    .search-container {
      position: relative;
      display: inline-block;
      width: 100%;
    }
    .search-container input {
      padding-left: 18px;
      height: 32px;
      padding-top: 6px;
      padding-bottom: 6px;
      border: none;
      outline: none;
      width: calc(100% - 32px);
    }
    .search-icon {
      position: absolute;
      left: 10px;
      top: 50%;
      transform: translateY(-50%);
      width: 20px;
      height: 20px;
      pointer-events: none;
    }
    .clear-button {
      background: transparent;
      border: none;
      cursor: pointer;
      font-size: 16px;
      position: absolute;
      right: 10px;
      top: 50%;
      transform: translateY(-50%);
      display: none; /* 默认情况下隐藏 */
    }

    .clear-button.visible {
      display: block; /* 当输入框有内容时显示 */
    }
    #results {
      position: absolute;
      top: 100%;
      right: 40px;
      width: 500px;
      background-color: white;
      border: 1px solid #ccc;
      border-radius: 8px;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
      z-index: 100;
      overflow-y: auto;
      max-height: 700px;
    }

    #results a {
      display: block;
      text-decoration: none;
      color: #333;
    }

    #results a:hover {
      background-color: #f1f1f1;
    }

    @media (max-width: 85.125rem) {
      /* 在这里编写屏幕宽度小于85.125rem的CSS样式 */
      .header-content {
        width: 100%;
        padding-left: 1.5rem;
        padding-right: 1.5rem;
      }
    }

    @media (max-width: 50rem) {
      /** header 特殊处理 屏幕小于 800px 就显示不完全 */
      .header-content {
        width: 100%;
        padding-left: 1.5rem;
        padding-right: 1.5rem;
      }
      .left-content .mobile-navbar {
        display: block;
      }
      .center-content {
        display: none;
      }
      .code-toggle {
        padding: 0 !important;
        background-color: transparent !important;
        span {
          display: none;
        }
        svg {
          width: 1.5rem;
          height: 1.5rem;
        }
      }
      .search-container {
        margin-left:6px;
      }
      .search-svg {
        padding-top:5px;
      }
      .search-container input {
        padding-left: 0px;
        padding-top: 0px;
      }
      #results {
        right: 20px;
        width: 80%;
      }
    }
  }
</style>

<script>
  function addCopilot() {
    const copilotJSScript = document.createElement("script");
    copilotJSScript.type = "text/javascript";
    copilotJSScript.src =
      "https://g.alicdn.com/cm-design/copilot-booter/0.0.26/copilot-booter.js";
    copilotJSScript.addEventListener("load", function () {
      if (window.CNPilot) {
        window.CNPilot.mounted({
          CNPilot_OPEN_SOURCE: ["sca.aliyun.com"],
          CNPilot_OPEN_SOURCE_API: "https://ai.nacos.io",
          CNPilot_OPEN_SOURCE_PRODUCT_NAME: "sca",
          showFloatICON: true,
          globalStyle: {
            top: "0",
            height: "100vh",
          },
          entryIconProps: {
            "position-type": "updown",
            "icon-hover-text": "专家答疑",
            "icon-style": {
              color: "red",
              background: "white",
              border: "2px solid red",
              borderRadius: "20px",
            },
          },
          headerProps: {
            closeIcon: { show: true },
            titleText: "AI答疑专家",
          },
        });
      }
    });
    document.body.append(copilotJSScript);
  }

  addCopilot();

  document.addEventListener("astro:page-load", function () {
    if (window.CNPilot) window.CNPilot.unmounted();
    addCopilot();
  });
</script>
